name: gsheet.action test
on: push

jobs:
  fetch:
    runs-on: ubuntu-latest
    steps:
      - id: 'update_worksheet'
        uses: jroehl/gsheet.action@release # you can specify '@release' to always have the latest changes
        with:
          spreadsheetId: 1N8wXrd30_sfsKvRoVcoZcpqXDWtsdbyyaF2a-DyjmgM
          commands: | # list of commands, specified as a valid JSON string
            [
              { "command": "getData", "args": { "range": "Blog!A2:F2" } }
            ]
        env:
          GSHEET_CLIENT_EMAIL: ${{ secrets.GSHEET_CLIENT_EMAIL }}
          GSHEET_PRIVATE_KEY: ${{ secrets.GSHEET_PRIVATE_KEY }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: dump results
        env:
          #  the output of the action can be found in ${{ steps.update_worksheet.outputs.results }}
          RESULTS: ${{ steps.update_worksheet.outputs.results }}
#        run: echo "$RESULTS" > test.txt | jq
        run: ulimit -s 65536
      - uses: EndBug/add-and-commit@v7 # You can change this to use a specific version.
        with:
          # The arguments for the `git add` command (see the paragraph below for more info)
          # Default: '.'
          # add: 'src'

          # The name of the user that will be displayed as the author of the commit.
          # Default: depends on the default_author input
          author_name: Author Name

          # The email of the user that will be displayed as the author of the commit.
          # Default: depends on the default_author input
          author_email: mail@example.com

          # The name of the branch to use, if different from the one that triggered the workflow.
          # Default: the branch that triggered the run
          # branch: some-branch

          # The name of the custom committer you want to use, if different from the author of the commit.
          # Default: the name of the author (set with either author_name or default_author)
          # committer_name: Committer Name

          # The email of the custom committer you want to use, if different from the author of the commit.
          # Default: the email of the author (set with either author_email or default_author)
          # committer_email: mail@example.com

          # The local path to the directory where your repository is located. You should use actions/checkout first to set it up.
          # Default: '.'
          # cwd: './path/to/the/repo'

          # Determines the way the action fills missing author name and email. Three options are available:
          # - github_actor -> UserName <UserName@users.noreply.github.com>
          # - user_info -> Your Display Name <your-actual@email.com>
          # - github_actions -> github-actions <email associated with the github logo>
          # Default: github_actor
          # default_author: github_actor

          # The message for the commit.
          # Default: 'Commit from GitHub Actions (name of the workflow)'
          # message: 'Your commit message'

          # The flag used on the pull strategy. Use NO-PULL to avoid the action pulling at all.
          # Default: '--no-rebase'
          # pull_strategy: 'NO-PULL or --no-rebase or --no-ff or --rebase'

          # Whether to push the commit and, if any, its tags to the repo. It can also be used to set the git push arguments (see the paragraph below for more info)
          # Default: true
          # push: false

          # The arguments for the `git rm` command (see the paragraph below for more info)
          # Default: ''
          # remove: './dir/old_file.js'

          # Whether to use the --signoff option on `git commit` (only boolean values accepted*)
          # Default: false
          # signoff: true

          # Arguments for the git tag command (the tag name always needs to be the first word not preceded by an hyphen)
          # Default: ''
          # tag: 'v1.0.0 --force'
