name: Instagram
on:
  workflow_dispatch:
  workflow_run:
    workflows: [ "Deploy" ]
    types:
      - completed
  schedule:
    - cron: '0 0 * * *'


jobs:
  fetch:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: gh-pages
      - uses: actions/setup-python@v1
      - uses: BSFishy/pip-action@v1
        with:
          packages: |
            instaloader
      - name: dump results
        shell: cmd
        run: |
          instaloader profile kitanohinako_official --login=invalidName123 -dirname-pattern=img/instagram --dirname-pattern=img/instagram --no-profile-pic --no-compress-json --filename-pattern={date_utc}_{shortcode}_COUNT --password="%INSTA_PW%"
        env:
          INSTA_PW: ${{ secrets.INSTA_PW }}
      - name: create Json
        shell: python
        run: |
          # -*- coding: utf-8 -*-
          import os
          import json

          directory = './img/instagram'
          data = []
          for filename in os.listdir(directory):
              jsonString = '{"filename":"value1","text":"value2", "type":"value3"}'
              jsonObject = json.loads(jsonString)
              if not filename.startswith("kitanohinako_official") and filename.endswith(".jpg") or filename.endswith(".png") or filename.endswith(".jpeg"):
                  jsonObject["filename"] = filename
                  jsonObject["type"] = "image"
              elif filename.endswith(".mp4"):
                  jsonObject["filename"] = filename
                  jsonObject["type"] = "video"
              else:
                  continue
              filenameForText = filename.split("_COUNT")[0] + "_COUNT.txt"
              with open(os.path.join(directory, filenameForText), encoding='utf-8') as f:
                  lines = f.readlines()
              jsonObject["text"] = lines
              data.append(jsonObject)

          directoryForJson = './assets/'
          file_path = os.path.join(directoryForJson, 'instagram.json')
          if not os.path.isdir(directoryForJson):
              os.mkdir(directoryForJson)
          with open(file_path, 'w', encoding='utf-8') as outfile:
                      json.dump(data, outfile, ensure_ascii=False, indent=4)

      - uses: EndBug/add-and-commit@v7 # You can change this to use a specific version.
        with:

          # The name of the user that will be displayed as the author of the commit.
          # Default: depends on the default_author input
          author_name: Github Actions

          # The email of the user that will be displayed as the author of the commit.
          # Default: depends on the default_author input
          author_email: actions@github.com

          # The name of the branch to use, if different from the one that triggered the workflow.
          # Default: the branch that triggered the run
          branch: gh-pages

          # The message for the commit.
          # Default: 'Commit from GitHub Actions (name of the workflow)'
          message: 'Update instagram.json'
