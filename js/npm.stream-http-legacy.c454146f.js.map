{"version":3,"sources":["webpack:///./node_modules/stream-http/lib/request.js","webpack:///./node_modules/stream-http/index.js","webpack:///./node_modules/stream-http/lib/capability.js","webpack:///./node_modules/stream-http/lib/response.js"],"names":["inherits","response","stream","toArrayBuffer","IncomingMessage","rStates","readyStates","decideMode","preferBinary","useFetch","capability","fetch","mozchunkedarraybuffer","msstream","arraybuffer","vbArray","ClientRequest","module","exports","opts","self","this","Writable","call","_opts","_body","_headers","auth","setHeader","Buffer","toString","Object","keys","headers","forEach","name","mode","abortController","overrideMimeType","Error","_mode","_fetchTimer","on","_onFinish","statusValid","xhr","status","e","prototype","value","lowerName","toLowerCase","unsafeHeaders","indexOf","getHeader","header","removeHeader","_destroyed","headersObj","body","method","concat","blobConstructor","global","Blob","map","buffer","type","headersList","keyName","Array","isArray","v","push","signal","controller","AbortController","_fetchAbortController","requestTimeout","setTimeout","emit","abort","url","undefined","credentials","withCredentials","then","_fetchResponse","_connect","reason","clearTimeout","_xhr","XMLHttpRequest","open","err","process","nextTick","responseType","split","timeout","ontimeout","setRequestHeader","_response","onreadystatechange","readyState","LOADING","DONE","_onXHRProgress","onprogress","onerror","send","_write","chunk","encoding","cb","destroy","end","data","flushHeaders","setNoDelay","setSocketKeepAlive","extend","statusCodes","http","request","parse","defaultProtocol","location","protocol","search","host","hostname","port","path","toUpperCase","req","get","Agent","defaultMaxSockets","globalAgent","STATUS_CODES","METHODS","writableStream","isFunction","WritableStream","ArrayBuffer","getXHR","XDomainRequest","checkTypeSupport","haveArrayBuffer","haveSlice","slice","VBArray","UNSENT","OPENED","HEADERS_RECEIVED","fetchTimer","Readable","rawHeaders","trailers","rawTrailers","statusCode","statusMessage","statusText","key","writable","write","Promise","resolve","reject","_resumeFetch","close","pipeTo","catch","reader","getReader","read","result","done","_pos","responseURL","getAllResponseHeaders","matches","match","_charset","mimeType","charsetMatch","_read","responseBody","toArray","responseText","length","newData","substr","i","charCodeAt","Uint8Array","MSStreamReader","byteLength","onload","readAsArrayBuffer"],"mappings":"uGAAA,sBAAiB,EAAQ,QACrBA,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAS,EAAQ,QACjBC,EAAgB,EAAQ,QAExBC,EAAkBH,EAASG,gBAC3BC,EAAUJ,EAASK,YAEvB,SAASC,EAAYC,EAAcC,GAClC,OAAIC,EAAWC,OAASF,EAChB,QACGC,EAAWE,sBACd,0BACGF,EAAWG,SACd,YACGH,EAAWI,aAAeN,EAC7B,cACGE,EAAWK,SAAWP,EACzB,eAEA,OAIT,IAAIQ,EAAgBC,EAAOC,QAAU,SAAUC,GAC9C,IAYIX,EAZAY,EAAOC,KACXnB,EAAOoB,SAASC,KAAKH,GAErBA,EAAKI,MAAQL,EACbC,EAAKK,MAAQ,GACbL,EAAKM,SAAW,GACZP,EAAKQ,MACRP,EAAKQ,UAAU,gBAAiB,SAAW,IAAIC,EAAOV,EAAKQ,MAAMG,SAAS,WAC3EC,OAAOC,KAAKb,EAAKc,SAASC,SAAQ,SAAUC,GAC3Cf,EAAKQ,UAAUO,EAAMhB,EAAKc,QAAQE,OAInC,IAAI1B,GAAW,EACf,GAAkB,kBAAdU,EAAKiB,MAA6B,mBAAoBjB,IAAST,EAAW2B,gBAE7E5B,GAAW,EACXD,GAAe,OACT,GAAkB,qBAAdW,EAAKiB,KAGf5B,GAAe,OACT,GAAkB,6BAAdW,EAAKiB,KAEf5B,GAAgBE,EAAW4B,qBACrB,IAAKnB,EAAKiB,MAAsB,YAAdjB,EAAKiB,MAAoC,gBAAdjB,EAAKiB,KAIxD,MAAM,IAAIG,MAAM,+BAFhB/B,GAAe,EAIhBY,EAAKoB,MAAQjC,EAAWC,EAAcC,GACtCW,EAAKqB,YAAc,KAEnBrB,EAAKsB,GAAG,UAAU,WACjBtB,EAAKuB,gBA8KP,SAASC,EAAaC,GACrB,IACC,IAAIC,EAASD,EAAIC,OACjB,OAAmB,OAAXA,GAA8B,IAAXA,EAC1B,MAAOC,GACR,OAAO,GA/KT/C,EAASgB,EAAed,EAAOoB,UAE/BN,EAAcgC,UAAUpB,UAAY,SAAUO,EAAMc,GACnD,IAAI7B,EAAOC,KACP6B,EAAYf,EAAKgB,eAIqB,IAAtCC,EAAcC,QAAQH,KAG1B9B,EAAKM,SAASwB,GAAa,CAC1Bf,KAAMA,EACNc,MAAOA,KAITjC,EAAcgC,UAAUM,UAAY,SAAUnB,GAC7C,IAAIoB,EAASlC,KAAKK,SAASS,EAAKgB,eAChC,OAAII,EACIA,EAAON,MACR,MAGRjC,EAAcgC,UAAUQ,aAAe,SAAUrB,GAChD,IAAIf,EAAOC,YACJD,EAAKM,SAASS,EAAKgB,gBAG3BnC,EAAcgC,UAAUL,UAAY,WACnC,IAAIvB,EAAOC,KAEX,IAAID,EAAKqC,WAAT,CAEA,IAAItC,EAAOC,EAAKI,MAEZkC,EAAatC,EAAKM,SAClBiC,EAAO,KACS,QAAhBxC,EAAKyC,QAAoC,SAAhBzC,EAAKyC,SAEhCD,EADGjD,EAAWI,YACPX,EAAc0B,EAAOgC,OAAOzC,EAAKK,QAC9Bf,EAAWoD,gBACd,IAAIC,EAAOC,KAAK5C,EAAKK,MAAMwC,KAAI,SAAUC,GAC/C,OAAO/D,EAAc+D,MAClB,CACHC,MAAOT,EAAW,iBAAmB,IAAIT,OAAS,KAI5CpB,EAAOgC,OAAOzC,EAAKK,OAAOK,YAKnC,IAAIsC,EAAc,GAalB,GAZArC,OAAOC,KAAK0B,GAAYxB,SAAQ,SAAUmC,GACzC,IAAIlC,EAAOuB,EAAWW,GAASlC,KAC3Bc,EAAQS,EAAWW,GAASpB,MAC5BqB,MAAMC,QAAQtB,GACjBA,EAAMf,SAAQ,SAAUsC,GACvBJ,EAAYK,KAAK,CAACtC,EAAMqC,OAGzBJ,EAAYK,KAAK,CAACtC,EAAMc,OAIP,UAAf7B,EAAKoB,MAAmB,CAC3B,IAAIkC,EAAS,KAEb,GAAIhE,EAAW2B,gBAAiB,CAC/B,IAAIsC,EAAa,IAAIC,gBACrBF,EAASC,EAAWD,OACpBtD,EAAKyD,sBAAwBF,EAEzB,mBAAoBxD,GAAgC,IAAxBA,EAAK2D,iBACpC1D,EAAKqB,YAAcsB,EAAOgB,YAAW,WACpC3D,EAAK4D,KAAK,kBACN5D,EAAKyD,uBACRzD,EAAKyD,sBAAsBI,UAC1B9D,EAAK2D,iBAIVf,EAAOpD,MAAMS,EAAKI,MAAM0D,IAAK,CAC5BtB,OAAQxC,EAAKI,MAAMoC,OACnB3B,QAASmC,EACTT,KAAMA,QAAQwB,EACd/C,KAAM,OACNgD,YAAajE,EAAKkE,gBAAkB,UAAY,cAChDX,OAAQA,IACNY,MAAK,SAAUrF,GACjBmB,EAAKmE,eAAiBtF,EACtBmB,EAAKoE,cACH,SAAUC,GACZ1B,EAAO2B,aAAatE,EAAKqB,aACpBrB,EAAKqC,YACTrC,EAAK4D,KAAK,QAASS,UAEf,CACN,IAAI5C,EAAMzB,EAAKuE,KAAO,IAAI5B,EAAO6B,eACjC,IACC/C,EAAIgD,KAAKzE,EAAKI,MAAMoC,OAAQxC,EAAKI,MAAM0D,KAAK,GAC3C,MAAOY,GAIR,YAHAC,EAAQC,UAAS,WAChB5E,EAAK4D,KAAK,QAASc,MAMjB,iBAAkBjD,IACrBA,EAAIoD,aAAe7E,EAAKoB,MAAM0D,MAAM,KAAK,IAEtC,oBAAqBrD,IACxBA,EAAIwC,kBAAoBlE,EAAKkE,iBAEX,SAAfjE,EAAKoB,OAAoB,qBAAsBK,GAClDA,EAAIP,iBAAiB,sCAElB,mBAAoBnB,IACvB0B,EAAIsD,QAAUhF,EAAK2D,eACnBjC,EAAIuD,UAAY,WACfhF,EAAK4D,KAAK,oBAIZZ,EAAYlC,SAAQ,SAAUqB,GAC7BV,EAAIwD,iBAAiB9C,EAAO,GAAIA,EAAO,OAGxCnC,EAAKkF,UAAY,KACjBzD,EAAI0D,mBAAqB,WACxB,OAAQ1D,EAAI2D,YACX,KAAKnG,EAAQoG,QACb,KAAKpG,EAAQqG,KACZtF,EAAKuF,iBACL,QAKgB,4BAAfvF,EAAKoB,QACRK,EAAI+D,WAAa,WAChBxF,EAAKuF,mBAIP9D,EAAIgE,QAAU,WACTzF,EAAKqC,YAETrC,EAAK4D,KAAK,QAAS,IAAIzC,MAAM,eAG9B,IACCM,EAAIiE,KAAKnD,GACR,MAAOmC,GAIR,YAHAC,EAAQC,UAAS,WAChB5E,EAAK4D,KAAK,QAASc,UAqBvB9E,EAAcgC,UAAU2D,eAAiB,WACxC,IAAIvF,EAAOC,KAENuB,EAAYxB,EAAKuE,QAASvE,EAAKqC,aAG/BrC,EAAKkF,WACTlF,EAAKoE,WAENpE,EAAKkF,UAAUK,mBAGhB3F,EAAcgC,UAAUwC,SAAW,WAClC,IAAIpE,EAAOC,KAEPD,EAAKqC,aAGTrC,EAAKkF,UAAY,IAAIlG,EAAgBgB,EAAKuE,KAAMvE,EAAKmE,eAAgBnE,EAAKoB,MAAOpB,EAAKqB,aACtFrB,EAAKkF,UAAU5D,GAAG,SAAS,SAASoD,GACnC1E,EAAK4D,KAAK,QAASc,MAGpB1E,EAAK4D,KAAK,WAAY5D,EAAKkF,aAG5BtF,EAAcgC,UAAU+D,OAAS,SAAUC,EAAOC,EAAUC,GAC3D,IAAI9F,EAAOC,KAEXD,EAAKK,MAAMgD,KAAKuC,GAChBE,KAGDlG,EAAcgC,UAAUiC,MAAQjE,EAAcgC,UAAUmE,QAAU,WACjE,IAAI/F,EAAOC,KACXD,EAAKqC,YAAa,EAClBM,EAAO2B,aAAatE,EAAKqB,aACrBrB,EAAKkF,YACRlF,EAAKkF,UAAU7C,YAAa,GACzBrC,EAAKuE,KACRvE,EAAKuE,KAAKV,QACF7D,EAAKyD,uBACbzD,EAAKyD,sBAAsBI,SAG7BjE,EAAcgC,UAAUoE,IAAM,SAAUC,EAAMJ,EAAUC,GACvD,IAAI9F,EAAOC,KACS,oBAATgG,IACVH,EAAKG,EACLA,OAAOlC,GAGRjF,EAAOoB,SAAS0B,UAAUoE,IAAI7F,KAAKH,EAAMiG,EAAMJ,EAAUC,IAG1DlG,EAAcgC,UAAUsE,aAAe,aACvCtG,EAAcgC,UAAU+B,WAAa,aACrC/D,EAAcgC,UAAUuE,WAAa,aACrCvG,EAAcgC,UAAUwE,mBAAqB,aAG7C,IAAIpE,EAAgB,CACnB,iBACA,kBACA,iCACA,gCACA,aACA,iBACA,SACA,UACA,OACA,MACA,SACA,OACA,aACA,SACA,UACA,KACA,UACA,oBACA,UACA,S,uECrUD,kBAAoB,EAAQ,QACxBnD,EAAW,EAAQ,QACnBwH,EAAS,EAAQ,QACjBC,EAAc,EAAQ,QACtBxC,EAAM,EAAQ,QAEdyC,EAAOzG,EAEXyG,EAAKC,QAAU,SAAUzG,EAAM+F,GAE7B/F,EADmB,kBAATA,EACH+D,EAAI2C,MAAM1G,GAEVsG,EAAOtG,GAKf,IAAI2G,GAAoE,IAAlD/D,EAAOgE,SAASC,SAASC,OAAO,aAAsB,QAAU,GAElFD,EAAW7G,EAAK6G,UAAYF,EAC5BI,EAAO/G,EAAKgH,UAAYhH,EAAK+G,KAC7BE,EAAOjH,EAAKiH,KACZC,EAAOlH,EAAKkH,MAAQ,IAGpBH,IAA+B,IAAvBA,EAAK7E,QAAQ,OACxB6E,EAAO,IAAMA,EAAO,KAGrB/G,EAAK+D,KAAOgD,EAAQF,EAAW,KAAOE,EAAQ,KAAOE,EAAO,IAAMA,EAAO,IAAMC,EAC/ElH,EAAKyC,QAAUzC,EAAKyC,QAAU,OAAO0E,cACrCnH,EAAKc,QAAUd,EAAKc,SAAW,GAI/B,IAAIsG,EAAM,IAAIvH,EAAcG,GAG5B,OAFI+F,GACHqB,EAAI7F,GAAG,WAAYwE,GACbqB,GAGRZ,EAAKa,IAAM,SAAcrH,EAAM+F,GAC9B,IAAIqB,EAAMZ,EAAKC,QAAQzG,EAAM+F,GAE7B,OADAqB,EAAInB,MACGmB,GAGRZ,EAAK3G,cAAgBA,EACrB2G,EAAKvH,gBAAkBH,EAASG,gBAEhCuH,EAAKc,MAAQ,aACbd,EAAKc,MAAMC,kBAAoB,EAE/Bf,EAAKgB,YAAc,IAAIhB,EAAKc,MAE5Bd,EAAKiB,aAAelB,EAEpBC,EAAKkB,QAAU,CACd,WACA,UACA,OACA,SACA,MACA,OACA,OACA,WACA,QACA,aACA,QACA,OACA,SACA,UACA,QACA,OACA,WACA,YACA,QACA,MACA,SACA,SACA,YACA,QACA,SACA,iB,4CCnFD,YAAA3H,EAAA,sCAEAA,EAAQ4H,eAAiBC,EAAWhF,EAAOiF,gBAE3C9H,EAAQmB,gBAAkB0G,EAAWhF,EAAOa,iBAE5C1D,EAAQ4C,iBAAkB,EAC1B,IACC,IAAIE,KAAK,CAAC,IAAIiF,YAAY,KAC1B/H,EAAQ4C,iBAAkB,EACzB,MAAOf,IAKT,IAAIF,EACJ,SAASqG,IAER,QAAY/D,IAARtC,EAAmB,OAAOA,EAE9B,GAAIkB,EAAO6B,eAAgB,CAC1B/C,EAAM,IAAIkB,EAAO6B,eAIjB,IACC/C,EAAIgD,KAAK,MAAO9B,EAAOoF,eAAiB,IAAM,uBAC7C,MAAMpG,GACPF,EAAM,WAIPA,EAAM,KAEP,OAAOA,EAGR,SAASuG,EAAkBjF,GAC1B,IAAItB,EAAMqG,IACV,IAAKrG,EAAK,OAAO,EACjB,IAEC,OADAA,EAAIoD,aAAe9B,EACZtB,EAAIoD,eAAiB9B,EAC3B,MAAOpB,IACT,OAAO,EAKR,IAAIsG,EAAgD,qBAAvBtF,EAAOkF,YAChCK,EAAYD,GAAmBN,EAAWhF,EAAOkF,YAAYjG,UAAUuG,OAkB3E,SAASR,EAAY9F,GACpB,MAAwB,oBAAVA,EAff/B,EAAQJ,YAAcI,EAAQP,OAAU0I,GAAmBD,EAAiB,eAI5ElI,EAAQL,UAAYK,EAAQP,OAAS2I,GAAaF,EAAiB,aACnElI,EAAQN,uBAAyBM,EAAQP,OAAS0I,GACjDD,EAAiB,2BAIlBlI,EAAQoB,iBAAmBpB,EAAQP,SAAUuI,KAAWH,EAAWG,IAAS5G,kBAE5EpB,EAAQH,QAAUgI,EAAWhF,EAAOyF,SAMpC3G,EAAM,O,4CCxEN,sBAAiB,EAAQ,QACrB7C,EAAW,EAAQ,QACnBE,EAAS,EAAQ,QAEjBG,EAAUa,EAAQZ,YAAc,CACnCmJ,OAAQ,EACRC,OAAQ,EACRC,iBAAkB,EAClBlD,QAAS,EACTC,KAAM,GAGHtG,EAAkBc,EAAQd,gBAAkB,SAAUyC,EAAK5C,EAAUmC,EAAMwH,GAC9E,IAAIxI,EAAOC,KAiBX,GAhBAnB,EAAO2J,SAAStI,KAAKH,GAErBA,EAAKoB,MAAQJ,EACbhB,EAAKa,QAAU,GACfb,EAAK0I,WAAa,GAClB1I,EAAK2I,SAAW,GAChB3I,EAAK4I,YAAc,GAGnB5I,EAAKsB,GAAG,OAAO,WAEdqD,EAAQC,UAAS,WAChB5E,EAAK4D,KAAK,eAIC,UAAT5C,EAAkB,CAYrB,GAXAhB,EAAKmE,eAAiBtF,EAEtBmB,EAAK8D,IAAMjF,EAASiF,IACpB9D,EAAK6I,WAAahK,EAAS6C,OAC3B1B,EAAK8I,cAAgBjK,EAASkK,WAE9BlK,EAASgC,QAAQC,SAAQ,SAAUqB,EAAQ6G,GAC1ChJ,EAAKa,QAAQmI,EAAIjH,eAAiBI,EAClCnC,EAAK0I,WAAWrF,KAAK2F,EAAK7G,MAGvB7C,EAAWoI,eAAgB,CAC9B,IAAIuB,EAAW,IAAIrB,eAAe,CACjCsB,MAAO,SAAUtD,GAChB,OAAO,IAAIuD,SAAQ,SAAUC,EAASC,GACjCrJ,EAAKqC,WACRgH,IACSrJ,EAAKqD,KAAK,IAAI5C,EAAOmF,IAC9BwD,IAEApJ,EAAKsJ,aAAeF,MAIvBG,MAAO,WACN5G,EAAO2B,aAAakE,GACfxI,EAAKqC,YACTrC,EAAKqD,KAAK,OAEZQ,MAAO,SAAUa,GACX1E,EAAKqC,YACTrC,EAAK4D,KAAK,QAASc,MAItB,IAMC,YALA7F,EAAS0D,KAAKiH,OAAOP,GAAUQ,OAAM,SAAU/E,GAC9C/B,EAAO2B,aAAakE,GACfxI,EAAKqC,YACTrC,EAAK4D,KAAK,QAASc,MAGpB,MAAO/C,KAGV,IAAI+H,EAAS7K,EAAS0D,KAAKoH,YAC3B,SAASC,IACRF,EAAOE,OAAO1F,MAAK,SAAU2F,GAC5B,IAAI7J,EAAKqC,WAAT,CAEA,GAAIwH,EAAOC,KAGV,OAFAnH,EAAO2B,aAAakE,QACpBxI,EAAKqD,KAAK,MAGXrD,EAAKqD,KAAK,IAAI5C,EAAOoJ,EAAOhI,QAC5B+H,QACEH,OAAM,SAAU/E,GAClB/B,EAAO2B,aAAakE,GACfxI,EAAKqC,YACTrC,EAAK4D,KAAK,QAASc,MAGtBkF,QACM,CACN5J,EAAKuE,KAAO9C,EACZzB,EAAK+J,KAAO,EAEZ/J,EAAK8D,IAAMrC,EAAIuI,YACfhK,EAAK6I,WAAapH,EAAIC,OACtB1B,EAAK8I,cAAgBrH,EAAIsH,WACzB,IAAIlI,EAAUY,EAAIwI,wBAAwBnF,MAAM,SAoBhD,GAnBAjE,EAAQC,SAAQ,SAAUqB,GACzB,IAAI+H,EAAU/H,EAAOgI,MAAM,oBAC3B,GAAID,EAAS,CACZ,IAAIlB,EAAMkB,EAAQ,GAAGnI,cACT,eAARiH,QACuBjF,IAAtB/D,EAAKa,QAAQmI,KAChBhJ,EAAKa,QAAQmI,GAAO,IAErBhJ,EAAKa,QAAQmI,GAAK3F,KAAK6G,EAAQ,UACCnG,IAAtB/D,EAAKa,QAAQmI,GACvBhJ,EAAKa,QAAQmI,IAAQ,KAAOkB,EAAQ,GAEpClK,EAAKa,QAAQmI,GAAOkB,EAAQ,GAE7BlK,EAAK0I,WAAWrF,KAAK6G,EAAQ,GAAIA,EAAQ,QAI3ClK,EAAKoK,SAAW,kBACX9K,EAAW4B,iBAAkB,CACjC,IAAImJ,EAAWrK,EAAK0I,WAAW,aAC/B,GAAI2B,EAAU,CACb,IAAIC,EAAeD,EAASF,MAAM,2BAC9BG,IACHtK,EAAKoK,SAAWE,EAAa,GAAGvI,eAG7B/B,EAAKoK,WACTpK,EAAKoK,SAAW,YAKpBxL,EAASI,EAAiBF,EAAO2J,UAEjCzJ,EAAgB4C,UAAU2I,MAAQ,WACjC,IAAIvK,EAAOC,KAEPmJ,EAAUpJ,EAAKsJ,aACfF,IACHpJ,EAAKsJ,aAAe,KACpBF,MAIFpK,EAAgB4C,UAAU2D,eAAiB,WAC1C,IAAIvF,EAAOC,KAEPwB,EAAMzB,EAAKuE,KAEX1F,EAAW,KACf,OAAQmB,EAAKoB,OACZ,IAAK,eACJ,GAAIK,EAAI2D,aAAenG,EAAQqG,KAC9B,MACD,IAECzG,EAAW,IAAI8D,EAAOyF,QAAQ3G,EAAI+I,cAAcC,UAC/C,MAAO9I,IACT,GAAiB,OAAb9C,EAAmB,CACtBmB,EAAKqD,KAAK,IAAI5C,EAAO5B,IACrB,MAGF,IAAK,OACJ,IACCA,EAAW4C,EAAIiJ,aACd,MAAO/I,GACR3B,EAAKoB,MAAQ,eACb,MAED,GAAIvC,EAAS8L,OAAS3K,EAAK+J,KAAM,CAChC,IAAIa,EAAU/L,EAASgM,OAAO7K,EAAK+J,MACnC,GAAsB,mBAAlB/J,EAAKoK,SAA+B,CAEvC,IADA,IAAItH,EAAS,IAAIrC,EAAOmK,EAAQD,QACvBG,EAAI,EAAGA,EAAIF,EAAQD,OAAQG,IACnChI,EAAOgI,GAA6B,IAAxBF,EAAQG,WAAWD,GAEhC9K,EAAKqD,KAAKP,QAEV9C,EAAKqD,KAAKuH,EAAS5K,EAAKoK,UAEzBpK,EAAK+J,KAAOlL,EAAS8L,OAEtB,MACD,IAAK,cACJ,GAAIlJ,EAAI2D,aAAenG,EAAQqG,OAAS7D,EAAI5C,SAC3C,MACDA,EAAW4C,EAAI5C,SACfmB,EAAKqD,KAAK,IAAI5C,EAAO,IAAIuK,WAAWnM,KACpC,MACD,IAAK,0BAEJ,GADAA,EAAW4C,EAAI5C,SACX4C,EAAI2D,aAAenG,EAAQoG,UAAYxG,EAC1C,MACDmB,EAAKqD,KAAK,IAAI5C,EAAO,IAAIuK,WAAWnM,KACpC,MACD,IAAK,YAEJ,GADAA,EAAW4C,EAAI5C,SACX4C,EAAI2D,aAAenG,EAAQoG,QAC9B,MACD,IAAIqE,EAAS,IAAI/G,EAAOsI,eACxBvB,EAAOlE,WAAa,WACfkE,EAAOG,OAAOqB,WAAalL,EAAK+J,OACnC/J,EAAKqD,KAAK,IAAI5C,EAAO,IAAIuK,WAAWtB,EAAOG,OAAO1B,MAAMnI,EAAK+J,SAC7D/J,EAAK+J,KAAOL,EAAOG,OAAOqB,aAG5BxB,EAAOyB,OAAS,WACfnL,EAAKqD,KAAK,OAGXqG,EAAO0B,kBAAkBvM,GACzB,MAIEmB,EAAKuE,KAAKa,aAAenG,EAAQqG,MAAuB,cAAftF,EAAKoB,OACjDpB,EAAKqD,KAAK,S","file":"js/npm.stream-http-legacy.c454146f.js","sourcesContent":["var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\nvar toArrayBuffer = require('to-arraybuffer')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else if (capability.vbArray && preferBinary) {\n\t\treturn 'text:vbarray'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n\t\tif (capability.arraybuffer) {\n\t\t\tbody = toArrayBuffer(Buffer.concat(self._body))\n\t\t} else if (capability.blobConstructor) {\n\t\t\tbody = new global.Blob(self._body.map(function (buffer) {\n\t\t\t\treturn toArrayBuffer(buffer)\n\t\t\t}), {\n\t\t\t\ttype: (headersObj['content-type'] || {}).value || ''\n\t\t\t})\n\t\t} else {\n\t\t\t// get utf8 string\n\t\t\tbody = Buffer.concat(self._body).toString()\n\t\t}\n\t}\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tvar fetchTimer = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tglobal.clearTimeout(self._fetchTimer)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode.split(':')[0]\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress()\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._fetchTimer)\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n\tvar self = this\n\tself._destroyed = true\n\tglobal.clearTimeout(self._fetchTimer)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setTimeout = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n","var ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]","exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\nexports.blobConstructor = false\ntry {\n\tnew Blob([new ArrayBuffer(1)])\n\texports.blobConstructor = true\n} catch (e) {}\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.\n// Safari 7.1 appears to have fixed this bug.\nvar haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined'\nvar haveSlice = haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice)\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || (haveArrayBuffer && checkTypeSupport('arraybuffer'))\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && haveSlice && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && haveArrayBuffer &&\n\tcheckTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nexports.vbArray = isFunction(global.VBArray)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, fetchTimer) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(new Buffer(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tif (result.done) {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(new Buffer(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text:vbarray': // For IE9\n\t\t\tif (xhr.readyState !== rStates.DONE)\n\t\t\t\tbreak\n\t\t\ttry {\n\t\t\t\t// This fails in IE8\n\t\t\t\tresponse = new global.VBArray(xhr.responseBody).toArray()\n\t\t\t} catch (e) {}\n\t\t\tif (response !== null) {\n\t\t\t\tself.push(new Buffer(response))\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// Falls through in IE8\t\n\t\tcase 'text':\n\t\t\ttry { // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4\n\t\t\t\tresponse = xhr.responseText\n\t\t\t} catch (e) {\n\t\t\t\tself._mode = 'text:vbarray'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = new Buffer(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tself.push(null)\n\t}\n}\n"],"sourceRoot":""}