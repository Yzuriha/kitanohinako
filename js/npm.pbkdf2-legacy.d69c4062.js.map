{"version":3,"sources":["webpack:///./node_modules/pbkdf2/lib/async.js","webpack:///./node_modules/pbkdf2/lib/precondition.js","webpack:///./node_modules/pbkdf2/lib/to-buffer.js","webpack:///./node_modules/pbkdf2/lib/default-encoding.js","webpack:///./node_modules/pbkdf2/browser.js","webpack:///./node_modules/pbkdf2/lib/sync-browser.js"],"names":["ZERO_BUF","nextTick","Buffer","checkParameters","defaultEncoding","sync","toBuffer","subtle","global","crypto","toBrowser","sha","sha1","sha256","sha384","sha512","checks","checkNative","algo","process","browser","Promise","resolve","importKey","deriveBits","undefined","alloc","prom","browserPbkdf2","then","catch","getNextTick","queueMicrotask","setImmediate","setTimeout","password","salt","iterations","length","name","key","hash","res","from","resolvePromise","promise","callback","out","e","module","exports","keylen","digest","toLowerCase","Error","resp","MAX_ALLOC","Math","pow","TypeError","thing","encoding","isBuffer","ArrayBuffer","isView","buffer","version","pVersionMajor","parseInt","split","slice","pbkdf2","pbkdf2Sync","md5","RIPEMD160","ZEROS","sizes","sha224","rmd160","ripemd160","Hmac","alg","saltLen","getDigest","blocksize","concat","ipad","allocUnsafe","opad","i","ipad1","copy","this","ipad2","size","shaFunc","data","update","rmd160Func","hmac","DK","block1","destPos","hLen","l","ceil","writeUInt32BE","T","run","U","j","k","prototype","h"],"mappings":"kGAAA,gBAOIA,EAkCAC,EAzCJ,EAAa,EAAQ,QAAeC,OAEhCC,EAAkB,EAAQ,QAC1BC,EAAkB,EAAQ,QAC1BC,EAAO,EAAQ,QACfC,EAAW,EAAQ,QAGnBC,EAASC,EAAOC,QAAUD,EAAOC,OAAOF,OACxCG,EAAY,CACdC,IAAK,QACL,QAAS,QACTC,KAAM,QACNC,OAAQ,UACR,UAAW,UACXC,OAAQ,UACR,UAAW,UACX,UAAW,UACXC,OAAQ,WAENC,EAAS,GACb,SAASC,EAAaC,GACpB,GAAIV,EAAOW,UAAYX,EAAOW,QAAQC,QACpC,OAAOC,QAAQC,SAAQ,GAEzB,IAAKf,IAAWA,EAAOgB,YAAchB,EAAOiB,WAC1C,OAAOH,QAAQC,SAAQ,GAEzB,QAAqBG,IAAjBT,EAAOE,GACT,OAAOF,EAAOE,GAEhBlB,EAAWA,GAAYE,EAAOwB,MAAM,GACpC,IAAIC,EAAOC,EAAc5B,EAAUA,EAAU,GAAI,IAAKkB,GACnDW,MAAK,WACJ,OAAO,KACNC,OAAM,WACP,OAAO,KAGX,OADAd,EAAOE,GAAQS,EACRA,EAGT,SAASI,IACP,OAAI9B,IAIFA,EADEO,EAAOW,SAAWX,EAAOW,QAAQlB,SACxBO,EAAOW,QAAQlB,SACjBO,EAAOwB,eACLxB,EAAOwB,eACTxB,EAAOyB,aACLzB,EAAOyB,aAEPzB,EAAO0B,WAEbjC,GAET,SAAS2B,EAAeO,EAAUC,EAAMC,EAAYC,EAAQpB,GAC1D,OAAOX,EAAOgB,UACZ,MAAOY,EAAU,CAAEI,KAAM,WAAY,EAAO,CAAC,eAC7CV,MAAK,SAAUW,GACf,OAAOjC,EAAOiB,WAAW,CACvBe,KAAM,SACNH,KAAMA,EACNC,WAAYA,EACZI,KAAM,CACJF,KAAMrB,IAEPsB,EAAKF,GAAU,MACjBT,MAAK,SAAUa,GAChB,OAAOxC,EAAOyC,KAAKD,MAIvB,SAASE,EAAgBC,EAASC,GAChCD,EAAQhB,MAAK,SAAUkB,GACrBhB,KAAc,WACZe,EAAS,KAAMC,SAEhB,SAAUC,GACXjB,KAAc,WACZe,EAASE,SAIfC,EAAOC,QAAU,SAAUf,EAAUC,EAAMC,EAAYc,EAAQC,EAAQN,GAC/C,oBAAXM,IACTN,EAAWM,EACXA,OAAS3B,GAGX2B,EAASA,GAAU,OACnB,IAAIlC,EAAOR,EAAU0C,EAAOC,eAE5B,GAAKnC,GAAkC,oBAAnBV,EAAOa,QAA3B,CAgBA,GAHAlB,EAAgBkC,EAAYc,GAC5BhB,EAAW7B,EAAS6B,EAAU/B,EAAiB,YAC/CgC,EAAO9B,EAAS8B,EAAMhC,EAAiB,QACf,oBAAb0C,EAAyB,MAAM,IAAIQ,MAAM,kCAEpDV,EAAe3B,EAAYC,GAAMW,MAAK,SAAU0B,GAC9C,OAAIA,EAAa3B,EAAcO,EAAUC,EAAMC,EAAYc,EAAQjC,GAE5Db,EAAK8B,EAAUC,EAAMC,EAAYc,EAAQC,MAC9CN,QArBFf,KAAc,WACZ,IAAIgB,EACJ,IACEA,EAAM1C,EAAK8B,EAAUC,EAAMC,EAAYc,EAAQC,GAC/C,MAAOJ,GACP,OAAOF,EAASE,GAElBF,EAAS,KAAMC,S,2CCtGrB,IAAIS,EAAYC,KAAKC,IAAI,EAAG,IAAM,EAElCT,EAAOC,QAAU,SAAUb,EAAYc,GACrC,GAA0B,kBAAfd,EACT,MAAM,IAAIsB,UAAU,2BAGtB,GAAItB,EAAa,EACf,MAAM,IAAIsB,UAAU,kBAGtB,GAAsB,kBAAXR,EACT,MAAM,IAAIQ,UAAU,2BAGtB,GAAIR,EAAS,GAAKA,EAASK,GAAaL,IAAWA,EACjD,MAAM,IAAIQ,UAAU,oB,uBChBxB,IAAIzD,EAAS,EAAQ,QAAeA,OAEpC+C,EAAOC,QAAU,SAAUU,EAAOC,EAAUtB,GAC1C,GAAIrC,EAAO4D,SAASF,GAClB,OAAOA,EACF,GAAqB,kBAAVA,EAChB,OAAO1D,EAAOyC,KAAKiB,EAAOC,GACrB,GAAIE,YAAYC,OAAOJ,GAC5B,OAAO1D,EAAOyC,KAAKiB,EAAMK,QAEzB,MAAM,IAAIN,UAAUpB,EAAO,8D,wBCV/B,oBAEA,GAAI/B,EAAOW,SAAWX,EAAOW,QAAQC,QACnChB,EAAkB,aACb,GAAII,EAAOW,SAAWX,EAAOW,QAAQ+C,QAAS,CACnD,IAAIC,EAAgBC,SAASjD,EAAQ+C,QAAQG,MAAM,KAAK,GAAGC,MAAM,GAAI,IAErElE,EAAkB+D,GAAiB,EAAI,QAAU,cAEjD/D,EAAkB,QAEpB6C,EAAOC,QAAU9C,I,qDCXjB8C,EAAQqB,OAAS,EAAQ,QACzBrB,EAAQsB,WAAa,EAAQ,S,qBCD7B,IAAIC,EAAM,EAAQ,QACdC,EAAY,EAAQ,QACpB/D,EAAM,EAAQ,QACdT,EAAS,EAAQ,QAAeA,OAEhCC,EAAkB,EAAQ,QAC1BC,EAAkB,EAAQ,QAC1BE,EAAW,EAAQ,QAEnBqE,EAAQzE,EAAOwB,MAAM,KACrBkD,EAAQ,CACVH,IAAK,GACL7D,KAAM,GACNiE,OAAQ,GACRhE,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GACR+D,OAAQ,GACRC,UAAW,IAGb,SAASC,EAAMC,EAAKzC,EAAK0C,GACvB,IAAIzC,EAAO0C,EAAUF,GACjBG,EAAqB,WAARH,GAA4B,WAARA,EAAoB,IAAM,GAE3DzC,EAAIF,OAAS8C,EACf5C,EAAMC,EAAKD,GACFA,EAAIF,OAAS8C,IACtB5C,EAAMtC,EAAOmF,OAAO,CAAC7C,EAAKmC,GAAQS,IAKpC,IAFA,IAAIE,EAAOpF,EAAOqF,YAAYH,EAAYR,EAAMK,IAC5CO,EAAOtF,EAAOqF,YAAYH,EAAYR,EAAMK,IACvCQ,EAAI,EAAGA,EAAIL,EAAWK,IAC7BH,EAAKG,GAAc,GAATjD,EAAIiD,GACdD,EAAKC,GAAc,GAATjD,EAAIiD,GAGhB,IAAIC,EAAQxF,EAAOqF,YAAYH,EAAYF,EAAU,GACrDI,EAAKK,KAAKD,EAAO,EAAG,EAAGN,GACvBQ,KAAKF,MAAQA,EACbE,KAAKC,MAAQP,EACbM,KAAKJ,KAAOA,EACZI,KAAKX,IAAMA,EACXW,KAAKR,UAAYA,EACjBQ,KAAKnD,KAAOA,EACZmD,KAAKE,KAAOlB,EAAMK,GAUpB,SAASE,EAAWF,GAClB,SAASc,EAASC,GAChB,OAAOrF,EAAIsE,GAAKgB,OAAOD,GAAM5C,SAE/B,SAAS8C,EAAYF,GACnB,OAAO,IAAItB,GAAYuB,OAAOD,GAAM5C,SAGtC,MAAY,WAAR6B,GAA4B,cAARA,EAA4BiB,EACxC,QAARjB,EAAsBR,EACnBsB,EAGT,SAASxB,EAAQpC,EAAUC,EAAMC,EAAYc,EAAQC,GACnDjD,EAAgBkC,EAAYc,GAC5BhB,EAAW7B,EAAS6B,EAAU/B,EAAiB,YAC/CgC,EAAO9B,EAAS8B,EAAMhC,EAAiB,QAEvCgD,EAASA,GAAU,OAEnB,IAAI+C,EAAO,IAAInB,EAAK5B,EAAQjB,EAAUC,EAAKE,QAEvC8D,EAAKlG,EAAOqF,YAAYpC,GACxBkD,EAASnG,EAAOqF,YAAYnD,EAAKE,OAAS,GAC9CF,EAAKuD,KAAKU,EAAQ,EAAG,EAAGjE,EAAKE,QAM7B,IAJA,IAAIgE,EAAU,EACVC,EAAO3B,EAAMxB,GACboD,EAAI/C,KAAKgD,KAAKtD,EAASoD,GAElBd,EAAI,EAAGA,GAAKe,EAAGf,IAAK,CAC3BY,EAAOK,cAAcjB,EAAGrD,EAAKE,QAK7B,IAHA,IAAIqE,EAAIR,EAAKS,IAAIP,EAAQF,EAAKT,OAC1BmB,EAAIF,EAECG,EAAI,EAAGA,EAAIzE,EAAYyE,IAAK,CACnCD,EAAIV,EAAKS,IAAIC,EAAGV,EAAKN,OACrB,IAAK,IAAIkB,EAAI,EAAGA,EAAIR,EAAMQ,IAAKJ,EAAEI,IAAMF,EAAEE,GAG3CJ,EAAEhB,KAAKS,EAAIE,GACXA,GAAWC,EAGb,OAAOH,EApDTpB,EAAKgC,UAAUJ,IAAM,SAAUZ,EAAMV,GACnCU,EAAKL,KAAKL,EAAMM,KAAKR,WACrB,IAAI6B,EAAIrB,KAAKnD,KAAK6C,GAElB,OADA2B,EAAEtB,KAAKC,KAAKJ,KAAMI,KAAKR,WAChBQ,KAAKnD,KAAKmD,KAAKJ,OAmDxBvC,EAAOC,QAAUqB","file":"js/npm.pbkdf2-legacy.d69c4062.js","sourcesContent":["var Buffer = require('safe-buffer').Buffer\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar sync = require('./sync')\nvar toBuffer = require('./to-buffer')\n\nvar ZERO_BUF\nvar subtle = global.crypto && global.crypto.subtle\nvar toBrowser = {\n  sha: 'SHA-1',\n  'sha-1': 'SHA-1',\n  sha1: 'SHA-1',\n  sha256: 'SHA-256',\n  'sha-256': 'SHA-256',\n  sha384: 'SHA-384',\n  'sha-384': 'SHA-384',\n  'sha-512': 'SHA-512',\n  sha512: 'SHA-512'\n}\nvar checks = []\nfunction checkNative (algo) {\n  if (global.process && !global.process.browser) {\n    return Promise.resolve(false)\n  }\n  if (!subtle || !subtle.importKey || !subtle.deriveBits) {\n    return Promise.resolve(false)\n  }\n  if (checks[algo] !== undefined) {\n    return checks[algo]\n  }\n  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)\n  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)\n    .then(function () {\n      return true\n    }).catch(function () {\n      return false\n    })\n  checks[algo] = prom\n  return prom\n}\nvar nextTick\nfunction getNextTick () {\n  if (nextTick) {\n    return nextTick\n  }\n  if (global.process && global.process.nextTick) {\n    nextTick = global.process.nextTick\n  } else if (global.queueMicrotask) {\n    nextTick = global.queueMicrotask\n  } else if (global.setImmediate) {\n    nextTick = global.setImmediate\n  } else {\n    nextTick = global.setTimeout\n  }\n  return nextTick\n}\nfunction browserPbkdf2 (password, salt, iterations, length, algo) {\n  return subtle.importKey(\n    'raw', password, { name: 'PBKDF2' }, false, ['deriveBits']\n  ).then(function (key) {\n    return subtle.deriveBits({\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: iterations,\n      hash: {\n        name: algo\n      }\n    }, key, length << 3)\n  }).then(function (res) {\n    return Buffer.from(res)\n  })\n}\n\nfunction resolvePromise (promise, callback) {\n  promise.then(function (out) {\n    getNextTick()(function () {\n      callback(null, out)\n    })\n  }, function (e) {\n    getNextTick()(function () {\n      callback(e)\n    })\n  })\n}\nmodule.exports = function (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = undefined\n  }\n\n  digest = digest || 'sha1'\n  var algo = toBrowser[digest.toLowerCase()]\n\n  if (!algo || typeof global.Promise !== 'function') {\n    getNextTick()(function () {\n      var out\n      try {\n        out = sync(password, salt, iterations, keylen, digest)\n      } catch (e) {\n        return callback(e)\n      }\n      callback(null, out)\n    })\n    return\n  }\n\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\n\n  resolvePromise(checkNative(algo).then(function (resp) {\n    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)\n\n    return sync(password, salt, iterations, keylen, digest)\n  }), callback)\n}\n","var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\n\nmodule.exports = function (iterations, keylen) {\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number')\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations')\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number')\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */\n    throw new TypeError('Bad key length')\n  }\n}\n","var Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (thing, encoding, name) {\n  if (Buffer.isBuffer(thing)) {\n    return thing\n  } else if (typeof thing === 'string') {\n    return Buffer.from(thing, encoding)\n  } else if (ArrayBuffer.isView(thing)) {\n    return Buffer.from(thing.buffer)\n  } else {\n    throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView')\n  }\n}\n","var defaultEncoding\n/* istanbul ignore next */\nif (global.process && global.process.browser) {\n  defaultEncoding = 'utf-8'\n} else if (global.process && global.process.version) {\n  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)\n\n  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'\n} else {\n  defaultEncoding = 'utf-8'\n}\nmodule.exports = defaultEncoding\n","exports.pbkdf2 = require('./lib/async')\nexports.pbkdf2Sync = require('./lib/sync')\n","var md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Buffer = require('safe-buffer').Buffer\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar toBuffer = require('./to-buffer')\n\nvar ZEROS = Buffer.alloc(128)\nvar sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n}\n\nfunction Hmac (alg, key, saltLen) {\n  var hash = getDigest(alg)\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  if (key.length > blocksize) {\n    key = hash(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)\n  ipad.copy(ipad1, 0, 0, blocksize)\n  this.ipad1 = ipad1\n  this.ipad2 = ipad\n  this.opad = opad\n  this.alg = alg\n  this.blocksize = blocksize\n  this.hash = hash\n  this.size = sizes[alg]\n}\n\nHmac.prototype.run = function (data, ipad) {\n  data.copy(ipad, this.blocksize)\n  var h = this.hash(ipad)\n  h.copy(this.opad, this.blocksize)\n  return this.hash(this.opad)\n}\n\nfunction getDigest (alg) {\n  function shaFunc (data) {\n    return sha(alg).update(data).digest()\n  }\n  function rmd160Func (data) {\n    return new RIPEMD160().update(data).digest()\n  }\n\n  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func\n  if (alg === 'md5') return md5\n  return shaFunc\n}\n\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n\n  digest = digest || 'sha1'\n\n  var hmac = new Hmac(digest, password, salt.length)\n\n  var DK = Buffer.allocUnsafe(keylen)\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var destPos = 0\n  var hLen = sizes[digest]\n  var l = Math.ceil(keylen / hLen)\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n\n    var T = hmac.run(block1, hmac.ipad1)\n    var U = T\n\n    for (var j = 1; j < iterations; j++) {\n      U = hmac.run(U, hmac.ipad2)\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\n    }\n\n    T.copy(DK, destPos)\n    destPos += hLen\n  }\n\n  return DK\n}\n\nmodule.exports = pbkdf2\n"],"sourceRoot":""}