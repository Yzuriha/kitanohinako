{"version":3,"sources":["webpack:///./node_modules/agent-base/dist/src/promisify.js","webpack:///./node_modules/agent-base/dist/src/index.js"],"names":["promisify","fn","req","opts","Promise","resolve","reject","call","this","err","rtn","Object","defineProperty","exports","value","default","__importDefault","mod","__esModule","events_1","debug_1","promisify_1","debug","isAgent","v","Boolean","addRequest","isSecureEndpoint","stack","Error","split","some","l","indexOf","createAgent","callback","Agent","EventEmitter","_opts","super","timeout","maxFreeSockets","maxSockets","maxTotalSockets","Infinity","sockets","freeSockets","requests","options","explicitDefaultPort","explicitProtocol","assign","secureEndpoint","host","port","protocol","path","agent","hostname","_defaultAgent","defaultPort","createConnection","_last","shouldKeepAlive","timedOut","timeoutId","timeoutMs","onerror","_hadError","emit","ontimeout","code","callbackError","clearTimeout","onsocket","socket","constructor","name","once","freeSocket","onSocket","method","promisifiedCallback","length","setTimeout","Number","then","catch","destroy","prototype","module"],"mappings":"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","file":"js/npm.agent-base-legacy.b5e643ff.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction promisify(fn) {\n    return function (req, opts) {\n        return new Promise((resolve, reject) => {\n            fn.call(this, req, opts, (err, rtn) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(rtn);\n                }\n            });\n        });\n    };\n}\nexports.default = promisify;\n//# sourceMappingURL=promisify.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst events_1 = require(\"events\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst promisify_1 = __importDefault(require(\"./promisify\"));\nconst debug = debug_1.default('agent-base');\nfunction isAgent(v) {\n    return Boolean(v) && typeof v.addRequest === 'function';\n}\nfunction isSecureEndpoint() {\n    const { stack } = new Error();\n    if (typeof stack !== 'string')\n        return false;\n    return stack.split('\\n').some(l => l.indexOf('(https.js:') !== -1 || l.indexOf('node:https:') !== -1);\n}\nfunction createAgent(callback, opts) {\n    return new createAgent.Agent(callback, opts);\n}\n(function (createAgent) {\n    /**\n     * Base `http.Agent` implementation.\n     * No pooling/keep-alive is implemented by default.\n     *\n     * @param {Function} callback\n     * @api public\n     */\n    class Agent extends events_1.EventEmitter {\n        constructor(callback, _opts) {\n            super();\n            let opts = _opts;\n            if (typeof callback === 'function') {\n                this.callback = callback;\n            }\n            else if (callback) {\n                opts = callback;\n            }\n            // Timeout for the socket to be returned from the callback\n            this.timeout = null;\n            if (opts && typeof opts.timeout === 'number') {\n                this.timeout = opts.timeout;\n            }\n            // These aren't actually used by `agent-base`, but are required\n            // for the TypeScript definition files in `@types/node` :/\n            this.maxFreeSockets = 1;\n            this.maxSockets = 1;\n            this.maxTotalSockets = Infinity;\n            this.sockets = {};\n            this.freeSockets = {};\n            this.requests = {};\n            this.options = {};\n        }\n        get defaultPort() {\n            if (typeof this.explicitDefaultPort === 'number') {\n                return this.explicitDefaultPort;\n            }\n            return isSecureEndpoint() ? 443 : 80;\n        }\n        set defaultPort(v) {\n            this.explicitDefaultPort = v;\n        }\n        get protocol() {\n            if (typeof this.explicitProtocol === 'string') {\n                return this.explicitProtocol;\n            }\n            return isSecureEndpoint() ? 'https:' : 'http:';\n        }\n        set protocol(v) {\n            this.explicitProtocol = v;\n        }\n        callback(req, opts, fn) {\n            throw new Error('\"agent-base\" has no default implementation, you must subclass and override `callback()`');\n        }\n        /**\n         * Called by node-core's \"_http_client.js\" module when creating\n         * a new HTTP request with this Agent instance.\n         *\n         * @api public\n         */\n        addRequest(req, _opts) {\n            const opts = Object.assign({}, _opts);\n            if (typeof opts.secureEndpoint !== 'boolean') {\n                opts.secureEndpoint = isSecureEndpoint();\n            }\n            if (opts.host == null) {\n                opts.host = 'localhost';\n            }\n            if (opts.port == null) {\n                opts.port = opts.secureEndpoint ? 443 : 80;\n            }\n            if (opts.protocol == null) {\n                opts.protocol = opts.secureEndpoint ? 'https:' : 'http:';\n            }\n            if (opts.host && opts.path) {\n                // If both a `host` and `path` are specified then it's most\n                // likely the result of a `url.parse()` call... we need to\n                // remove the `path` portion so that `net.connect()` doesn't\n                // attempt to open that as a unix socket file.\n                delete opts.path;\n            }\n            delete opts.agent;\n            delete opts.hostname;\n            delete opts._defaultAgent;\n            delete opts.defaultPort;\n            delete opts.createConnection;\n            // Hint to use \"Connection: close\"\n            // XXX: non-documented `http` module API :(\n            req._last = true;\n            req.shouldKeepAlive = false;\n            let timedOut = false;\n            let timeoutId = null;\n            const timeoutMs = opts.timeout || this.timeout;\n            const onerror = (err) => {\n                if (req._hadError)\n                    return;\n                req.emit('error', err);\n                // For Safety. Some additional errors might fire later on\n                // and we need to make sure we don't double-fire the error event.\n                req._hadError = true;\n            };\n            const ontimeout = () => {\n                timeoutId = null;\n                timedOut = true;\n                const err = new Error(`A \"socket\" was not created for HTTP request before ${timeoutMs}ms`);\n                err.code = 'ETIMEOUT';\n                onerror(err);\n            };\n            const callbackError = (err) => {\n                if (timedOut)\n                    return;\n                if (timeoutId !== null) {\n                    clearTimeout(timeoutId);\n                    timeoutId = null;\n                }\n                onerror(err);\n            };\n            const onsocket = (socket) => {\n                if (timedOut)\n                    return;\n                if (timeoutId != null) {\n                    clearTimeout(timeoutId);\n                    timeoutId = null;\n                }\n                if (isAgent(socket)) {\n                    // `socket` is actually an `http.Agent` instance, so\n                    // relinquish responsibility for this `req` to the Agent\n                    // from here on\n                    debug('Callback returned another Agent instance %o', socket.constructor.name);\n                    socket.addRequest(req, opts);\n                    return;\n                }\n                if (socket) {\n                    socket.once('free', () => {\n                        this.freeSocket(socket, opts);\n                    });\n                    req.onSocket(socket);\n                    return;\n                }\n                const err = new Error(`no Duplex stream was returned to agent-base for \\`${req.method} ${req.path}\\``);\n                onerror(err);\n            };\n            if (typeof this.callback !== 'function') {\n                onerror(new Error('`callback` is not defined'));\n                return;\n            }\n            if (!this.promisifiedCallback) {\n                if (this.callback.length >= 3) {\n                    debug('Converting legacy callback function to promise');\n                    this.promisifiedCallback = promisify_1.default(this.callback);\n                }\n                else {\n                    this.promisifiedCallback = this.callback;\n                }\n            }\n            if (typeof timeoutMs === 'number' && timeoutMs > 0) {\n                timeoutId = setTimeout(ontimeout, timeoutMs);\n            }\n            if ('port' in opts && typeof opts.port !== 'number') {\n                opts.port = Number(opts.port);\n            }\n            try {\n                debug('Resolving socket for %o request: %o', opts.protocol, `${req.method} ${req.path}`);\n                Promise.resolve(this.promisifiedCallback(req, opts)).then(onsocket, callbackError);\n            }\n            catch (err) {\n                Promise.reject(err).catch(callbackError);\n            }\n        }\n        freeSocket(socket, opts) {\n            debug('Freeing socket %o %o', socket.constructor.name, opts);\n            socket.destroy();\n        }\n        destroy() {\n            debug('Destroying agent %o', this.constructor.name);\n        }\n    }\n    createAgent.Agent = Agent;\n    // So that `instanceof` works correctly\n    createAgent.prototype = createAgent.Agent.prototype;\n})(createAgent || (createAgent = {}));\nmodule.exports = createAgent;\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}