(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["npm.google-spreadsheet"],{"261b":function(e,t,a){const r=a("2ef0"),{columnToLetter:s}=a("48d6"),{GoogleSpreadsheetFormulaError:i}=a("caad");class o{constructor(e,t,a,r){return this._sheet=e,this._row=t,this._column=a,this._updateRawData(r),this}_updateRawData(e={}){this._rawData=e,this._draftData={},this._error=null,r.get(this._rawData,"effectiveValue.errorValue")&&(this._error=new i(this._rawData.effectiveValue.errorValue))}get rowIndex(){return this._row}get columnIndex(){return this._column}get a1Column(){return s(this._column+1)}get a1Row(){return this._row+1}get a1Address(){return`${this.a1Column}${this.a1Row}`}get value(){if(void 0!==this._draftData.value)throw new Error("Value has been changed");return this._error?this._error:this._rawData.effectiveValue?r.values(this._rawData.effectiveValue)[0]:null}set value(e){if(r.isBoolean(e))this._draftData.valueType="boolValue";else if(r.isString(e))"="===e.substr(0,1)?this._draftData.valueType="formulaValue":this._draftData.valueType="stringValue";else if(r.isFinite(e))this._draftData.valueType="numberValue";else{if(!r.isNil(e))throw new Error("Set value to boolean, string, or number");this._draftData.valueType="stringValue",e=""}this._draftData.value=e}get valueType(){return this._error?"errorValue":this._rawData.effectiveValue?r.keys(this._rawData.effectiveValue)[0]:null}get formattedValue(){return this._rawData.formattedValue||null}set formattedValue(e){throw new Error("You cannot modify the formatted value directly")}get formula(){return r.get(this._rawData,"userEnteredValue.formulaValue",null)}set formula(e){if("="!==e.substr(0,1))throw new Error('formula must begin with "="');this.value=e}get formulaError(){return this._error}get hyperlink(){if(this._draftData.value)throw new Error("Save cell to be able to read hyperlink");return this._rawData.hyperlink}set hyperlink(e){throw new Error('Do not set hyperlink directly. Instead set cell.formula, for example `cell.formula = \'=HYPERLINK("http://google.com", "Google")\'`')}get note(){return void 0!==this._draftData.note?this._draftData.note:this._rawData.note}set note(e){if(null!==e&&void 0!==e||(e=""),!r.isString(e))throw new Error("Note must be a string");e===this._rawData.note?delete this._draftData.note:this._draftData.note=e}get userEnteredFormat(){return this._rawData.userEnteredFormat}get effectiveFormat(){return this._rawData.effectiveFormat}set userEnteredFormat(e){throw new Error("Do not modify directly, instead use format properties")}set effectiveFormat(e){throw new Error("Read-only")}_getFormatParam(e){if(r.get(this._draftData,"userEnteredFormat."+e))throw new Error("User format is unsaved - save the cell to be able to read it again");return Object.freeze(this._rawData.userEnteredFormat[e])}_setFormatParam(e,t){r.isEqual(t,r.get(this._rawData,"userEnteredFormat."+e))?r.unset(this._draftData,"userEnteredFormat."+e):(r.set(this._draftData,"userEnteredFormat."+e,t),this._draftData.clearFormat=!1)}get numberFormat(){return this._getFormatParam("numberFormat")}get backgroundColor(){return this._getFormatParam("backgroundColor")}get borders(){return this._getFormatParam("borders")}get padding(){return this._getFormatParam("padding")}get horizontalAlignment(){return this._getFormatParam("horizontalAlignment")}get verticalAlignment(){return this._getFormatParam("verticalAlignment")}get wrapStrategy(){return this._getFormatParam("wrapStrategy")}get textDirection(){return this._getFormatParam("textDirection")}get textFormat(){return this._getFormatParam("textFormat")}get hyperlinkDisplayType(){return this._getFormatParam("hyperlinkDisplayType")}get textRotation(){return this._getFormatParam("textRotation")}set numberFormat(e){return this._setFormatParam("numberFormat",e)}set backgroundColor(e){return this._setFormatParam("backgroundColor",e)}set borders(e){return this._setFormatParam("borders",e)}set padding(e){return this._setFormatParam("padding",e)}set horizontalAlignment(e){return this._setFormatParam("horizontalAlignment",e)}set verticalAlignment(e){return this._setFormatParam("verticalAlignment",e)}set wrapStrategy(e){return this._setFormatParam("wrapStrategy",e)}set textDirection(e){return this._setFormatParam("textDirection",e)}set textFormat(e){return this._setFormatParam("textFormat",e)}set hyperlinkDisplayType(e){return this._setFormatParam("hyperlinkDisplayType",e)}set textRotation(e){return this._setFormatParam("textRotation",e)}clearAllFormatting(){this._draftData.clearFormat=!0,delete this._draftData.userEnteredFormat}get _isDirty(){return void 0!==this._draftData.note||(!!r.keys(this._draftData.userEnteredFormat).length||(!!this._draftData.clearFormat||void 0!==this._draftData.value))}discardUnsavedChanges(){this._draftData={}}async save(){await this._sheet.saveUpdatedCells([this])}_getUpdateRequest(){const e=void 0!==this._draftData.value,t=void 0!==this._draftData.note,a=!!r.keys(this._draftData.userEnteredFormat||{}).length,s=this._draftData.clearFormat;if(!r.some([e,t,a,s]))return null;const i={...this._rawData.userEnteredFormat,...this._draftData.userEnteredFormat};return r.get(this._draftData,"userEnteredFormat.backgroundColor")&&delete i.backgroundColorStyle,{updateCells:{rows:[{values:[{...e&&{userEnteredValue:{[this._draftData.valueType]:this._draftData.value}},...t&&{note:this._draftData.note},...a&&{userEnteredFormat:i},...s&&{userEnteredFormat:{}}}]}],fields:r.keys(r.pickBy({userEnteredValue:e,note:t,userEnteredFormat:a||s})).join(","),start:{sheetId:this._sheet.sheetId,rowIndex:this.rowIndex,columnIndex:this.columnIndex}}}}}e.exports=o},"48d6":function(e,t,a){const r=a("2ef0");function s(e){return r.keys(e).join(",")}function i(e){let t,a="",r=e;while(r>0)t=(r-1)%26,a=String.fromCharCode(t+65)+a,r=(r-t-1)/26;return a}function o(e){let t=0;const{length:a}=e;for(let r=0;r<a;r++)t+=(e.charCodeAt(r)-64)*26**(a-r-1);return t}e.exports={getFieldMask:s,columnToLetter:i,letterToColumn:o}},9607:function(e,t,a){const{columnToLetter:r}=a("48d6");class s{constructor(e,t,a){this._sheet=e,this._rowNumber=t,this._rawData=a;for(let r=0;r<this._sheet.headerValues.length;r++){const e=this._sheet.headerValues[r];e&&Object.defineProperty(this,e,{get:()=>this._rawData[r],set:e=>{this._rawData[r]=e},enumerable:!0})}return this}get rowNumber(){return this._rowNumber}get rowIndex(){return this._rowNumber}get a1Range(){return[this._sheet.a1SheetName,"!","A"+this._rowNumber,":",`${r(this._sheet.headerValues.length)}${this._rowNumber}`].join("")}async save(e={}){if(this._deleted)throw new Error("This row has been deleted - call getRows again before making updates.");const t=await this._sheet._spreadsheet.axios.request({method:"put",url:"/values/"+encodeURIComponent(this.a1Range),params:{valueInputOption:e.raw?"RAW":"USER_ENTERED",includeValuesInResponse:!0},data:{range:this.a1Range,majorDimension:"ROWS",values:[this._rawData]}});this._rawData=t.data.updatedData.values[0]}async delete(){if(this._deleted)throw new Error("This row has been deleted - call getRows again before making updates.");const e=await this._sheet._makeSingleUpdateRequest("deleteRange",{range:{sheetId:this._sheet.sheetId,startRowIndex:this._rowNumber-1,endRowIndex:this._rowNumber},shiftDimension:"ROWS"});return this._deleted=!0,e}async del(){return this.delete()}}e.exports=s},"9cb7":function(e,t,a){const r=a("2ef0"),s=a("9607"),i=a("261b"),{getFieldMask:o,columnToLetter:n,letterToColumn:h}=a("48d6");function d(e){const t=r.groupBy(e);r.each(t,(e,t)=>{if(t&&e.length>1)throw new Error(`Duplicate header detected: "${t}". Please make sure all non-empty headers are unique`)})}class l{constructor(e,{properties:t,data:a}){return this._spreadsheet=e,this._rawProperties=t,this._cells=[],this._rowMetadata=[],this._columnMetadata=[],a&&this._fillCellData(a),this}async _makeSingleUpdateRequest(e,t){return this._spreadsheet._makeSingleUpdateRequest(e,{...t})}_ensureInfoLoaded(){if(!this._rawProperties)throw new Error("You must call `doc.loadInfo()` again before accessing this property")}resetLocalCache(e){e||(this._rawProperties=null),this.headerValues=null,this._cells=[]}_fillCellData(e){r.each(e,e=>{const t=e.startRow||0,a=e.startColumn||0,s=e.rowMetadata.length,o=e.columnMetadata.length;for(let n=0;n<s;n++){const s=t+n;for(let t=0;t<o;t++){const o=a+t;this._cells[s]||(this._cells[s]=[]);const h=r.get(e,`rowData[${n}].values[${t}]`);this._cells[s][o]?this._cells[s][o]._updateRawData(h):this._cells[s][o]=new i(this,s,o,h)}}for(let r=0;r<e.rowMetadata.length;r++)this._rowMetadata[t+r]=e.rowMetadata[r];for(let r=0;r<e.columnMetadata.length;r++)this._columnMetadata[a+r]=e.columnMetadata[r]})}_getProp(e){return this._ensureInfoLoaded(),this._rawProperties[e]}_setProp(e,t){throw new Error("Do not update directly - use `updateProperties()`")}get sheetId(){return this._getProp("sheetId")}get title(){return this._getProp("title")}get index(){return this._getProp("index")}get sheetType(){return this._getProp("sheetType")}get gridProperties(){return this._getProp("gridProperties")}get hidden(){return this._getProp("hidden")}get tabColor(){return this._getProp("tabColor")}get rightToLeft(){return this._getProp("rightToLeft")}set sheetId(e){return this._setProp("sheetId",e)}set title(e){return this._setProp("title",e)}set index(e){return this._setProp("index",e)}set sheetType(e){return this._setProp("sheetType",e)}set gridProperties(e){return this._setProp("gridProperties",e)}set hidden(e){return this._setProp("hidden",e)}set tabColor(e){return this._setProp("tabColor",e)}set rightToLeft(e){return this._setProp("rightToLeft",e)}get rowCount(){return this._ensureInfoLoaded(),this.gridProperties.rowCount}get columnCount(){return this._ensureInfoLoaded(),this.gridProperties.columnCount}get colCount(){throw new Error("`colCount` is deprecated - please use `columnCount` instead.")}set rowCount(e){throw new Error("Do not update directly. Use resize()")}set columnCount(e){throw new Error("Do not update directly. Use resize()")}get a1SheetName(){return`'${this.title.replace(/'/g,"''")}'`}get encodedA1SheetName(){return encodeURIComponent(this.a1SheetName)}get lastColumnLetter(){return n(this.columnCount)}get cellStats(){let e=r.flatten(this._cells);return e=r.compact(e),{nonEmpty:r.filter(e,e=>e.value).length,loaded:e.length,total:this.rowCount*this.columnCount}}getCellByA1(e){const t=e.match(/([A-Z]+)([0-9]+)/),a=h(t[1]),r=parseInt(t[2]);return this.getCell(r-1,a-1)}getCell(e,t){if(e<0||t<0)throw new Error("Min coordinate is 0, 0");if(e>=this.rowCount||t>=this.columnCount)throw new Error(`Out of bounds, sheet is ${this.rowCount} by ${this.columnCount}`);if(!r.get(this._cells,`[${e}][${t}]`))throw new Error("This cell has not been loaded yet");return this._cells[e][t]}async loadCells(e){if(!e)return this._spreadsheet.loadCells(this.a1SheetName);let t=r.isArray(e)?e:[e];return t=r.map(t,e=>{if(r.isString(e))return e.startsWith(this.a1SheetName)?e:`${this.a1SheetName}!${e}`;if(r.isObject(e)){if(!e.sheetId)return{sheetId:this.sheetId,...e};if(e.sheetId!==this.sheetId)throw new Error("Leave sheet ID blank or set to matching ID of this sheet");return e}throw new Error("Each filter must be a A1 range string or gridrange object")}),this._spreadsheet.loadCells(t)}async saveUpdatedCells(){const e=r.filter(r.flatten(this._cells),{_isDirty:!0});e.length&&await this.saveCells(e)}async saveCells(e){const t=r.map(e,e=>e._getUpdateRequest()),a=r.map(e,e=>`${this.a1SheetName}!${e.a1Address}`);if(!r.compact(t).length)throw new Error("At least one cell must have something to update");await this._spreadsheet._makeBatchUpdateRequest(t,a)}async loadHeaderRow(){const e=await this.getCellsInRange(`A1:${this.lastColumnLetter}1`);if(!e)throw new Error("No values in the header row - fill the first row with header values before trying to interact with rows");if(this.headerValues=r.map(e[0],e=>e.trim()),!r.compact(this.headerValues).length)throw new Error("All your header cells are blank - fill the first row with header values before trying to interact with rows");d(this.headerValues)}async setHeaderRow(e){if(!e)return;if(e.length>this.columnCount)throw new Error(`Sheet is not large enough to fit ${e.length} columns. Resize the sheet first.`);const t=r.map(e,e=>e.trim());if(d(t),!r.compact(t).length)throw new Error("All your header cells are blank -");const a=await this._spreadsheet.axios.request({method:"put",url:`/values/${this.encodedA1SheetName}!1:1`,params:{valueInputOption:"USER_ENTERED",includeValuesInResponse:!0},data:{range:this.a1SheetName+"!1:1",majorDimension:"ROWS",values:[[...t,...r.times(this.columnCount-t.length,()=>"")]]}});this.headerValues=a.data.updatedData.values[0]}async addRows(e,t={}){if(this.title.includes(":"))throw new Error('Please remove the ":" from your sheet title. There is a bug with the google API which breaks appending rows if any colons are in the sheet title.');if(!r.isArray(e))throw new Error("You must pass in an array of row values to append");this.headerValues||await this.loadHeaderRow();const a=[];r.each(e,e=>{let t;if(r.isArray(e))t=e;else{if(!r.isObject(e))throw new Error("Each row must be an object or an array");t=[];for(let a=0;a<this.headerValues.length;a++){const r=this.headerValues[a];t[a]=e[r]}}a.push(t)});const i=await this._spreadsheet.axios.request({method:"post",url:`/values/${this.encodedA1SheetName}!A1:append`,params:{valueInputOption:t.raw?"RAW":"USER_ENTERED",insertDataOption:t.insert?"INSERT_ROWS":"OVERWRITE",includeValuesInResponse:!0},data:{values:a}}),{updatedRange:o}=i.data.updates;let n=o.match(/![A-Z]+([0-9]+):?/)[1];return n=parseInt(n),t.insert?this._rawProperties.gridProperties.rowCount+=e.length:n+e.length>this.rowCount&&(this._rawProperties.gridProperties.rowCount=n+e.length-1),r.map(i.data.updates.updatedData.values,e=>{const t=new s(this,n++,e);return t})}async addRow(e,t){const a=await this.addRows([e],t);return a[0]}async getRows(e={}){e.offset=e.offset||0,e.limit=e.limit||this.rowCount-1,this.headerValues||await this.loadHeaderRow();const t=2+e.offset,a=t+e.limit-1,r=n(this.headerValues.length),i=await this.getCellsInRange(`A${t}:${r}${a}`);if(!i)return[];const o=[];let h=t;for(let n=0;n<i.length;n++)o.push(new s(this,h++,i[n]));return o}async updateProperties(e){return this._makeSingleUpdateRequest("updateSheetProperties",{properties:{sheetId:this.sheetId,...e},fields:o(e)})}async updateGridProperties(e){return this.updateProperties({gridProperties:e})}async resize(e){return this.updateGridProperties(e)}async updateDimensionProperties(e,t,a){return this._makeSingleUpdateRequest("updateDimensionProperties",{range:{sheetId:this.sheetId,dimension:e,...a&&{startIndex:a.startIndex,endIndex:a.endIndex}},properties:t,fields:o(t)})}async getCellsInRange(e,t){const a=await this._spreadsheet.axios.get(`/values/${this.encodedA1SheetName}!${e}`,{params:t});return a.data.values}async updateNamedRange(){}async addNamedRange(){}async deleteNamedRange(){}async repeatCell(){}async autoFill(){}async cutPaste(){}async copyPaste(){}async mergeCells(e,t="MERGE_ALL"){if(e.sheetId&&e.sheetId!==this.sheetId)throw new Error("Leave sheet ID blank or set to matching ID of this sheet");await this._makeSingleUpdateRequest("mergeCells",{mergeType:t,range:{...e,sheetId:this.sheetId}})}async unmergeCells(e){if(e.sheetId&&e.sheetId!==this.sheetId)throw new Error("Leave sheet ID blank or set to matching ID of this sheet");await this._makeSingleUpdateRequest("unmergeCells",{range:{...e,sheetId:this.sheetId}})}async updateBorders(){}async addFilterView(){}async appendCells(){}async clearBasicFilter(){}async deleteDimension(){}async deleteEmbeddedObject(){}async deleteFilterView(){}async duplicateFilterView(){}async duplicateSheet(){}async findReplace(){}async insertDimension(){}async insertRange(){}async moveDimension(){}async updateEmbeddedObjectPosition(){}async pasteData(){}async textToColumns(){}async updateFilterView(){}async deleteRange(){}async appendDimension(){}async addConditionalFormatRule(){}async updateConditionalFormatRule(){}async deleteConditionalFormatRule(){}async sortRange(){}async setDataValidation(){}async setBasicFilter(){}async addProtectedRange(){}async updateProtectedRange(){}async deleteProtectedRange(){}async autoResizeDimensions(){}async addChart(){}async updateChartSpec(){}async updateBanding(){}async addBanding(){}async deleteBanding(){}async createDeveloperMetadata(){}async updateDeveloperMetadata(){}async deleteDeveloperMetadata(){}async randomizeRange(){}async addDimensionGroup(){}async deleteDimensionGroup(){}async updateDimensionGroup(){}async trimWhitespace(){}async deleteDuplicates(){}async addSlicer(){}async updateSlicerSpec(){}async delete(){return this._spreadsheet.deleteSheet(this.sheetId)}async del(){return this.delete()}async copyToSpreadsheet(e){return this._spreadsheet.axios.post(`/sheets/${this.sheetId}:copyTo`,{destinationSpreadsheetId:e})}async clear(){await this._spreadsheet.axios.post(`/values/${this.encodedA1SheetName}:clear`),this.resetLocalCache(!0)}}e.exports=l},caad:function(e,t){class a{constructor(e){this.type=e.type,this.message=e.message}}e.exports={GoogleSpreadsheetFormulaError:a}},d340:function(e,t,a){const r=a("de2c"),s=a("9cb7"),i=a("9607"),{GoogleSpreadsheetFormulaError:o}=a("caad");e.exports={GoogleSpreadsheet:r,GoogleSpreadsheetWorksheet:s,GoogleSpreadsheetRow:i,GoogleSpreadsheetFormulaError:o}},de2c:function(e,t,a){const r=a("2ef0"),{JWT:s}=a("3ccc"),i=a("bc3a"),o=a("9cb7"),{getFieldMask:n}=a("48d6"),h=["https://www.googleapis.com/auth/spreadsheets"],d={JWT:"JWT",API_KEY:"API_KEY",RAW_ACCESS_TOKEN:"RAW_ACCESS_TOKEN",OAUTH:"OAUTH"};class l{constructor(e){return this.spreadsheetId=e,this.authMode=null,this._rawSheets={},this._rawProperties=null,this.axios=i.create({baseURL:"https://sheets.googleapis.com/v4/spreadsheets/"+(e||""),paramsSerializer(e){let t="";return r.keys(e).forEach(a=>{const s="object"===typeof e[a],i=s&&e[a].length>=0;s||(t+=`${a}=${encodeURIComponent(e[a])}&`),s&&i&&r.each(e[a],e=>{t+=`${a}=${encodeURIComponent(e)}&`})}),t?t.slice(0,-1):t}}),this.axios.interceptors.request.use(this._setAxiosRequestAuth.bind(this)),this.axios.interceptors.response.use(this._handleAxiosResponse.bind(this),this._handleAxiosErrors.bind(this)),this}async createNewSpreadsheetDocument(e){if(this.spreadsheetId)throw new Error("Only call `createNewSpreadsheetDocument()` on a GoogleSpreadsheet object that has no spreadsheetId set");const t=await this.axios.post(this.url,{properties:e});this.spreadsheetId=t.data.spreadsheetId,this.axios.defaults.baseURL+=this.spreadsheetId,this._rawProperties=t.data.properties,r.each(t.data.sheets,e=>this._updateOrCreateSheet(e))}async useApiKey(e){this.authMode=d.API_KEY,this.apiKey=e}async useRawAccessToken(e){this.authMode=d.RAW_ACCESS_TOKEN,this.accessToken=e}async useOAuth2Client(e){this.authMode=d.OAUTH,this.oAuth2Client=e}async useServiceAccountAuth(e,t=null){this.jwtClient=new s({email:e.client_email,key:e.private_key,scopes:h,subject:t}),await this.renewJwtAuth()}async renewJwtAuth(){this.authMode=d.JWT,await this.jwtClient.authorize()}async _setAxiosRequestAuth(e){if(this.authMode===d.JWT){if(!this.jwtClient)throw new Error("JWT auth is not set up properly");await this.jwtClient.authorize(),e.headers.Authorization="Bearer "+this.jwtClient.credentials.access_token}else if(this.authMode===d.RAW_ACCESS_TOKEN){if(!this.accessToken)throw new Error("Invalid access token");e.headers.Authorization="Bearer "+this.accessToken}else if(this.authMode===d.API_KEY){if(!this.apiKey)throw new Error("Please set API key");e.params=e.params||{},e.params.key=this.apiKey}else{if(this.authMode!==d.OAUTH)throw new Error("You must initialize some kind of auth before making any requests");{const t=await this.oAuth2Client.getAccessToken();e.headers.Authorization="Bearer "+t.token}}return e}async _handleAxiosResponse(e){return e}async _handleAxiosErrors(e){if(e.response&&e.response.data){if(!e.response.data.error)throw e;const{code:t,message:a}=e.response.data.error;throw e.message=`Google API error - [${t}] ${a}`,e}if(403===r.get(e,"response.status")&&this.authMode===d.API_KEY)throw new Error("Sheet is private. Use authentication or make public. (see https://github.com/theoephraim/node-google-spreadsheet#a-note-on-authentication for details)");throw e}async _makeSingleUpdateRequest(e,t){const a=await this.axios.post(":batchUpdate",{requests:[{[e]:t}],includeSpreadsheetInResponse:!0});return this._updateRawProperties(a.data.updatedSpreadsheet.properties),r.each(a.data.updatedSpreadsheet.sheets,e=>this._updateOrCreateSheet(e)),a.data.replies[0][e]}async _makeBatchUpdateRequest(e,t){const a=await this.axios.post(":batchUpdate",{requests:e,includeSpreadsheetInResponse:!0,...t&&{responseIncludeGridData:!0,..."*"!==t&&{responseRanges:t}}});this._updateRawProperties(a.data.updatedSpreadsheet.properties),r.each(a.data.updatedSpreadsheet.sheets,e=>this._updateOrCreateSheet(e))}_ensureInfoLoaded(){if(!this._rawProperties)throw new Error("You must call `doc.loadInfo()` before accessing this property")}_updateRawProperties(e){this._rawProperties=e}_updateOrCreateSheet({properties:e,data:t}){const{sheetId:a}=e;this._rawSheets[a]?(this._rawSheets[a]._rawProperties=e,this._rawSheets[a]._fillCellData(t)):this._rawSheets[a]=new o(this,{properties:e,data:t})}_getProp(e){return this._ensureInfoLoaded(),this._rawProperties[e]}_setProp(e,t){throw new Error("Do not update directly - use `updateProperties()`")}get title(){return this._getProp("title")}get locale(){return this._getProp("locale")}get timeZone(){return this._getProp("timeZone")}get autoRecalc(){return this._getProp("autoRecalc")}get defaultFormat(){return this._getProp("defaultFormat")}get spreadsheetTheme(){return this._getProp("spreadsheetTheme")}get iterativeCalculationSettings(){return this._getProp("iterativeCalculationSettings")}set title(e){this._setProp("title",e)}set locale(e){this._setProp("locale",e)}set timeZone(e){this._setProp("timeZone",e)}set autoRecalc(e){this._setProp("autoRecalc",e)}set defaultFormat(e){this._setProp("defaultFormat",e)}set spreadsheetTheme(e){this._setProp("spreadsheetTheme",e)}set iterativeCalculationSettings(e){this._setProp("iterativeCalculationSettings",e)}async updateProperties(e){await this._makeSingleUpdateRequest("updateSpreadsheetProperties",{properties:e,fields:n(e)})}async loadInfo(e){const t=await this.axios.get("/",{params:{...e&&{includeGridData:!0}}});this._rawProperties=t.data.properties,r.each(t.data.sheets,e=>this._updateOrCreateSheet(e))}async getInfo(){return this.loadInfo()}resetLocalCache(){this._rawProperties=null,this._rawSheets={}}get sheetCount(){return this._ensureInfoLoaded(),r.values(this._rawSheets).length}get sheetsById(){return this._ensureInfoLoaded(),this._rawSheets}get sheetsByIndex(){return this._ensureInfoLoaded(),r.sortBy(this._rawSheets,"index")}get sheetsByTitle(){return this._ensureInfoLoaded(),r.keyBy(this._rawSheets,"title")}async addSheet(e={}){const t=await this._makeSingleUpdateRequest("addSheet",{properties:r.omit(e,"headers","headerValues")}),a=t.properties.sheetId,s=this.sheetsById[a];return(e.headerValues||e.headers)&&await s.setHeaderRow(e.headerValues||e.headers),s}async addWorksheet(e){return this.addSheet(e)}async deleteSheet(e){await this._makeSingleUpdateRequest("deleteSheet",{sheetId:e}),delete this._rawSheets[e]}async addNamedRange(e,t,a){return this._makeSingleUpdateRequest("addNamedRange",{name:e,range:t,namedRangeId:a})}async deleteNamedRange(e){return this._makeSingleUpdateRequest("deleteNamedRange",{namedRangeId:e})}async loadCells(e){const t=this.authMode===d.API_KEY,a=r.isArray(e)?e:[e],s=r.map(a,e=>{if(r.isString(e))return t?e:{a1Range:e};if(r.isObject(e)){if(t)throw new Error("Only A1 ranges are supported when fetching cells with read-only access (using only an API key)");return{gridRange:e}}throw new Error("Each filter must be an A1 range string or a gridrange object")});let i;i=this.authMode===d.API_KEY?await this.axios.get("/",{params:{includeGridData:!0,ranges:s}}):await this.axios.post(":getByDataFilter",{includeGridData:!0,dataFilters:s});const{sheets:o}=i.data;r.each(o,e=>{this._updateOrCreateSheet(e)})}}e.exports=l}}]);
//# sourceMappingURL=npm.google-spreadsheet-legacy.c14a0231.js.map