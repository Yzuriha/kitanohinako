{"version":3,"sources":["webpack:///./node_modules/miller-rabin/lib/mr.js","webpack:///./node_modules/miller-rabin/node_modules/bn.js/lib/bn.js"],"names":["bn","brorand","MillerRabin","rand","this","Rand","module","exports","create","prototype","_randbelow","n","len","bitLength","min_bytes","Math","ceil","a","generate","cmp","_randrange","start","stop","size","sub","add","test","k","cb","red","mont","rone","toRed","max","n1","subn","s","testn","d","shrn","rn1","prime","x","redPow","i","redSqr","getDivisor","g","gcd","cmpn","fromRed","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","constructor","BN","number","base","endian","isBN","negative","words","length","_init","Buffer","wordSize","window","e","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseBase","str","end","mul","min","num","Array","isArray","left","right","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","toArray","j","w","off","strip","parseLength","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","_normSign","inspect","zeros","groupSizes","groupBases","toBitArray","bit","wbit","smallMulTo","self","out","b","lo","carry","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","t","_zeroBits","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","fftm","FFTM","mulp","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","ushrn","imaskn","maskn","isubn","addn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","isEven","yp","xp","im","isOdd","jm","_invmp","x1","x2","delta","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","ctx","convertTo","_forceRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","call","P224","P192","P25519","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","_strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","u"],"mappings":"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","file":"js/npm.miller-rabin-legacy.79964d7b.js","sourcesContent":["var bn = require('bn.js');\nvar brorand = require('brorand');\n\nfunction MillerRabin(rand) {\n  this.rand = rand || new brorand.Rand();\n}\nmodule.exports = MillerRabin;\n\nMillerRabin.create = function create(rand) {\n  return new MillerRabin(rand);\n};\n\nMillerRabin.prototype._randbelow = function _randbelow(n) {\n  var len = n.bitLength();\n  var min_bytes = Math.ceil(len / 8);\n\n  // Generage random bytes until a number less than n is found.\n  // This ensures that 0..n-1 have an equal probability of being selected.\n  do\n    var a = new bn(this.rand.generate(min_bytes));\n  while (a.cmp(n) >= 0);\n\n  return a;\n};\n\nMillerRabin.prototype._randrange = function _randrange(start, stop) {\n  // Generate a random number greater than or equal to start and less than stop.\n  var size = stop.sub(start);\n  return start.add(this._randbelow(size));\n};\n\nMillerRabin.prototype.test = function test(n, k, cb) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  var prime = true;\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n    if (cb)\n      cb(a);\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return false;\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s)\n      return false;\n  }\n\n  return prime;\n};\n\nMillerRabin.prototype.getDivisor = function getDivisor(n, k) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n\n    var g = n.gcd(a);\n    if (g.cmpn(1) !== 0)\n      return g;\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return x.fromRed().subn(1).gcd(n);\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s) {\n      x = x.redSqr();\n      return x.fromRed().subn(1).gcd(n);\n    }\n  }\n\n  return false;\n};\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"sourceRoot":""}