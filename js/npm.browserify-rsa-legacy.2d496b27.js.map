{"version":3,"sources":["webpack:///./node_modules/browserify-rsa/index.js"],"names":["randomBytes","blind","priv","r","getr","blinder","toRed","BN","mont","modulus","redPow","publicExponent","fromRed","unblinder","invm","len","byteLength","cmp","umod","prime1","prime2","crt","msg","blinds","blinded","mul","c1","c2","qinv","coefficient","p","q","m1","exponent1","m2","exponent2","h","isub","imul","iadd","toArrayLike","Buffer","module","exports"],"mappings":"wGAAA,kBAAS,EAAQ,QACbA,EAAc,EAAQ,QAE1B,SAASC,EAAOC,GACd,IAAIC,EAAIC,EAAKF,GACTG,EAAUF,EAAEG,MAAMC,EAAGC,KAAKN,EAAKO,UAAUC,OAAO,IAAIH,EAAGL,EAAKS,iBAAiBC,UACjF,MAAO,CAAEP,QAASA,EAASQ,UAAWV,EAAEW,KAAKZ,EAAKO,UAGpD,SAASL,EAAMF,GACb,IACIC,EADAY,EAAMb,EAAKO,QAAQO,aAEvB,GACEb,EAAI,IAAII,EAAGP,EAAYe,UAChBZ,EAAEc,IAAIf,EAAKO,UAAY,IAAMN,EAAEe,KAAKhB,EAAKiB,UAAYhB,EAAEe,KAAKhB,EAAKkB,SAC1E,OAAOjB,EAGT,SAASkB,EAAKC,EAAKpB,GACjB,IAAIqB,EAAStB,EAAMC,GACfa,EAAMb,EAAKO,QAAQO,aACnBQ,EAAU,IAAIjB,EAAGe,GAAKG,IAAIF,EAAOlB,SAASa,KAAKhB,EAAKO,SACpDiB,EAAKF,EAAQlB,MAAMC,EAAGC,KAAKN,EAAKiB,SAChCQ,EAAKH,EAAQlB,MAAMC,EAAGC,KAAKN,EAAKkB,SAChCQ,EAAO1B,EAAK2B,YACZC,EAAI5B,EAAKiB,OACTY,EAAI7B,EAAKkB,OACTY,EAAKN,EAAGhB,OAAOR,EAAK+B,WAAWrB,UAC/BsB,EAAKP,EAAGjB,OAAOR,EAAKiC,WAAWvB,UAC/BwB,EAAIJ,EAAGK,KAAKH,GAAII,KAAKV,GAAMV,KAAKY,GAAGQ,KAAKP,GAC5C,OAAOG,EAAGK,KAAKH,GAAGE,KAAKf,EAAOV,WAAWK,KAAKhB,EAAKO,SAAS+B,YAAYC,EAAQ,KAAM1B,GAExFM,EAAIjB,KAAOA,EAEXsC,EAAOC,QAAUtB,I","file":"js/npm.browserify-rsa-legacy.2d496b27.js","sourcesContent":["var BN = require('bn.js')\nvar randomBytes = require('randombytes')\n\nfunction blind (priv) {\n  var r = getr(priv)\n  var blinder = r.toRed(BN.mont(priv.modulus)).redPow(new BN(priv.publicExponent)).fromRed()\n  return { blinder: blinder, unblinder: r.invm(priv.modulus) }\n}\n\nfunction getr (priv) {\n  var len = priv.modulus.byteLength()\n  var r\n  do {\n    r = new BN(randomBytes(len))\n  } while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2))\n  return r\n}\n\nfunction crt (msg, priv) {\n  var blinds = blind(priv)\n  var len = priv.modulus.byteLength()\n  var blinded = new BN(msg).mul(blinds.blinder).umod(priv.modulus)\n  var c1 = blinded.toRed(BN.mont(priv.prime1))\n  var c2 = blinded.toRed(BN.mont(priv.prime2))\n  var qinv = priv.coefficient\n  var p = priv.prime1\n  var q = priv.prime2\n  var m1 = c1.redPow(priv.exponent1).fromRed()\n  var m2 = c2.redPow(priv.exponent2).fromRed()\n  var h = m1.isub(m2).imul(qinv).umod(p).imul(q)\n  return m2.iadd(h).imul(blinds.unblinder).umod(priv.modulus).toArrayLike(Buffer, 'be', len)\n}\ncrt.getr = getr\n\nmodule.exports = crt\n"],"sourceRoot":""}