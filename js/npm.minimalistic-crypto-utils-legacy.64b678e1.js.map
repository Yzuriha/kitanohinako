{"version":3,"sources":["webpack:///./node_modules/minimalistic-crypto-utils/lib/utils.js"],"names":["utils","exports","toArray","msg","enc","Array","isArray","slice","res","i","length","replace","push","parseInt","c","charCodeAt","hi","lo","zero2","word","toHex","toString","encode","arr"],"mappings":"+HAEA,IAAIA,EAAQC,EAEZ,SAASC,EAAQC,EAAKC,GACpB,GAAIC,MAAMC,QAAQH,GAChB,OAAOA,EAAII,QACb,IAAKJ,EACH,MAAO,GACT,IAAIK,EAAM,GACV,GAAmB,kBAARL,EAAkB,CAC3B,IAAK,IAAIM,EAAI,EAAGA,EAAIN,EAAIO,OAAQD,IAC9BD,EAAIC,GAAc,EAATN,EAAIM,GACf,OAAOD,EAET,GAAY,QAARJ,EAAe,CACjBD,EAAMA,EAAIQ,QAAQ,eAAgB,IAC9BR,EAAIO,OAAS,IAAM,IACrBP,EAAM,IAAMA,GACd,IAASM,EAAI,EAAGA,EAAIN,EAAIO,OAAQD,GAAK,EACnCD,EAAII,KAAKC,SAASV,EAAIM,GAAKN,EAAIM,EAAI,GAAI,UAEzC,IAASA,EAAI,EAAGA,EAAIN,EAAIO,OAAQD,IAAK,CACnC,IAAIK,EAAIX,EAAIY,WAAWN,GACnBO,EAAKF,GAAK,EACVG,EAAS,IAAJH,EACLE,EACFR,EAAII,KAAKI,EAAIC,GAEbT,EAAII,KAAKK,GAGf,OAAOT,EAIT,SAASU,EAAMC,GACb,OAAoB,IAAhBA,EAAKT,OACA,IAAMS,EAENA,EAIX,SAASC,EAAMjB,GAEb,IADA,IAAIK,EAAM,GACDC,EAAI,EAAGA,EAAIN,EAAIO,OAAQD,IAC9BD,GAAOU,EAAMf,EAAIM,GAAGY,SAAS,KAC/B,OAAOb,EAdTR,EAAME,QAAUA,EAQhBF,EAAMkB,MAAQA,EAQdlB,EAAMoB,MAAQA,EAEdpB,EAAMsB,OAAS,SAAgBC,EAAKnB,GAClC,MAAY,QAARA,EACKgB,EAAMG,GAENA","file":"js/npm.minimalistic-crypto-utils-legacy.64b678e1.js","sourcesContent":["'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n"],"sourceRoot":""}